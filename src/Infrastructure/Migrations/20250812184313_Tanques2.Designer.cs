// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812184313_Tanques2")]
    partial class Tanques2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Bomba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("EstaEncendida")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("FlujometroActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("RelayActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SalvaMotorActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Bombas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Bomba principal del sector A",
                            EstaEncendida = false,
                            FechaCreacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4762),
                            FlujometroActivo = false,
                            Nombre = "Bomba 1",
                            RelayActivo = false,
                            SalvaMotorActivo = false,
                            UltimaActualizacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4762)
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Bomba secundaria del sector A",
                            EstaEncendida = false,
                            FechaCreacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4765),
                            FlujometroActivo = false,
                            Nombre = "Bomba 2",
                            RelayActivo = false,
                            SalvaMotorActivo = false,
                            UltimaActualizacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4765)
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Bomba de respaldo del sector B",
                            EstaEncendida = false,
                            FechaCreacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4767),
                            FlujometroActivo = false,
                            Nombre = "Bomba 3",
                            RelayActivo = false,
                            SalvaMotorActivo = false,
                            UltimaActualizacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4768)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Tanque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CapacidadMaxima")
                        .HasColumnType("double");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("NivelAgua")
                        .HasColumnType("double");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Tanques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadMaxima = 10000.0,
                            Descripcion = "Tanque principal de almacenamiento de agua",
                            EstaActivo = true,
                            FechaCreacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4871),
                            NivelAgua = 75.0,
                            Nombre = "Tanque Principal",
                            UltimaActualizacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4872)
                        },
                        new
                        {
                            Id = 2,
                            CapacidadMaxima = 5000.0,
                            Descripcion = "Tanque de reserva para el sector A",
                            EstaActivo = true,
                            FechaCreacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4873),
                            NivelAgua = 45.0,
                            Nombre = "Tanque Secundario",
                            UltimaActualizacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4874)
                        },
                        new
                        {
                            Id = 3,
                            CapacidadMaxima = 3000.0,
                            Descripcion = "Tanque elevado para distribución por gravedad",
                            EstaActivo = true,
                            FechaCreacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4876),
                            NivelAgua = 15.0,
                            Nombre = "Tanque Elevado",
                            UltimaActualizacion = new DateTime(2025, 8, 12, 18, 43, 12, 939, DateTimeKind.Utc).AddTicks(4876)
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
